apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

android {

    compileSdkVersion 27
    buildToolsVersion '27.0.1'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionName libraryVersionName

        consumerProguardFiles 'proguard.pro'

        buildConfigField "Integer", "API_VERSION", '44'
        buildConfigField "String", "INTERMEDIATE_CA", '"MIIFAzCCA+ugAwIBAgIEUdNg7jANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwHhcNMTQxMDIyMTcwNTE0WhcNMjQxMDIzMDczMzIyWjCBujELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDEyIEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEuMCwGA1UEAxMlRW50cnVzdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEwxSzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANo/ltBNuS9E59s5XptQ7lylYdpBZ1MJqgCajld/KWvbx+EhJKo60I1HI9LtchbwkSHSXbe4S6iDj7eRMmjPziWTLLJ9l8j+wbQXugmeA5CTe3xJgyJoipveR8MxmHoufUAL0u8+07KMqo9Iqf8A6ClYBve2k1qUcyYmrVgO5UK41epzeWRoUyW4hM+Ueq4GRQyja03Qxr7qGKQ28JKyuhyIjzpSf/debYMcnfAf5cPW3aV4kj2wbSzqyc+UQRlxRGi6RzwE6V26PvA19xW2nvIuFR4/R8jIOKdzRV1NsDuxjhcpN+rdBQEiu5Q2Ko1bNf5TGS8IRsEqsxpiHU4r2RsCAwEAAaOCAQkwggEFMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMECDAGAQH/AgEAMDMGCCsGAQUFBwEBBCcwJTAjBggrBgEFBQcwAYYXaHR0cDovL29jc3AuZW50cnVzdC5uZXQwMAYDVR0fBCkwJzAloCOgIYYfaHR0cDovL2NybC5lbnRydXN0Lm5ldC9nMmNhLmNybDA7BgNVHSAENDAyMDAGBFUdIAAwKDAmBggrBgEFBQcCARYaaHR0cDovL3d3dy5lbnRydXN0Lm5ldC9ycGEwHQYDVR0OBBYEFIKicHTdvFM/z3vU981/p2DGCky/MB8GA1UdIwQYMBaAFGpyJnrQHu995ztpUdRsjZ+QEmarMA0GCSqGSIb3DQEBCwUAA4IBAQA/HBpb/0AiHY81DC2qmSerwBEycNc2KGmljbEnmUK+xJPrSFdDcSPE5U6trkNvknbFGe/KvG9CTBaahqkEOMdl8PUM4ErfovrOGhGonGkvG9/q4jLzzky8RgzAiYDRh2uiz2vUf/31YFJnV6Bt0WRBFG00Yu0GbCTyBrwoAq8DLcIzBfvLqhboZRBD9Wlc44FYmc1r07jHexlVyUDOeVW4c4npXEBmQxJ/B7hlVtWNw6f1sbZlnsCDNn8WRTx0S5OKPPEr9TVwc3vnggSxGJgO1JxvGvz8pzOlu7sY82t6XTKH920l5OJ2hiEeEUbNdg5vT6QhcQqEpy02qUgiUX6C"'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug
        release
    }
}

// define an 'optional' dependency
configurations {
    optional
    implementation.extendsFrom optional
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.code.gson:gson:2.8.2'
    optional 'io.reactivex.rxjava2:rxjava:2.1.5'
    compileOnly 'com.android.support:support-annotations:27.0.1'

    //AutoValue
    compileOnly 'com.google.auto.value:auto-value:1.4.1'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-gson:0.5.0'
    compileOnly 'com.ryanharter.auto.value:auto-value-gson:0.5.0'
    annotationProcessor 'com.gabrielittner.auto.value:auto-value-with:1.0.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.9.0'
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId = 'com.mastercard.gateway'
            artifactId project.name
            version = libraryVersionName

            artifact bundleRelease
            artifact androidJavadocsJar
            artifact androidSourcesJar

            pom.withXml {
                def root = asNode()

                // adds basic info
                root.appendNode('name', 'Mastercard Payment Gateway Android SDK')
                root.appendNode('description', 'The Android SDK for Mastercard Payment Gateway')
                root.appendNode('url', 'https://www.mastercard.com/gateway')

                // adds license info
                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'Apache License, Version 2.0')
                license.appendNode('url', 'https://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')

                // adds source control info
                def scm = root.appendNode('scm')
                scm.appendNode('url', 'https://github.com/Mastercard/gateway-android-sdk')
                scm.appendNode('connection', 'https://github.com/Mastercard/gateway-android-sdk.git')

                // adds dependencies
                def dependenciesNode = root.appendNode('dependencies')
                configurations.implementation.allDependencies.each { dp ->
                    if (dp.group) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dp.group)
                        dependencyNode.appendNode('artifactId', dp.name)
                        dependencyNode.appendNode('version', dp.version)

                        if (configurations.optional.allDependencies.contains(dp)) {
                            dependencyNode.appendNode('optional', true)
                        }
                    }
                }

                // adds developer info
                def developers = root.appendNode('developers')
                def dev = developers.appendNode('developer')
                dev.appendNode('id', 'simplify-mobile-team')
                dev.appendNode('name', 'Mastercard Payment Gateway Services')
                dev.appendNode('email', 'simplify_mobile_team@mastercard.com')
            }
        }
    }
}


bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['aar']
    publish = true
    pkg {
        repo = 'Android'
        name = 'gateway-android-sdk'
        userOrg = 'mpgs'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/Mastercard/gateway-android-sdk.git'
        version {
            name = libraryVersionName
        }
    }
}